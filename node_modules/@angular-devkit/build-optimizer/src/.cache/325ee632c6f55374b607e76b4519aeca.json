{"remainingRequest":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/ag-grid-enterprise/dist/lib/toolPanel/toolPanelComp.js","dependencies":[{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/ag-grid-enterprise/dist/lib/toolPanel/toolPanelComp.js","mtime":1523957359000},{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/cache-loader/dist/cjs.js","mtime":1525383502481},{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["// ag-grid-enterprise v17.1.1\n\"use strict\";\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar main_1 = require(\"ag-grid/main\");\nvar columnPanel_1 = require(\"./columnPanel\");\nvar ToolPanelComp = /*@__PURE__*/ (function (_super) {\n    __extends(ToolPanelComp, _super);\n    function ToolPanelComp() {\n        var _this = _super.call(this, \"<div class=\\\"ag-tool-panel\\\"/>\") || this;\n        // solves a race condition, where this is getting initialised after the grid core.\n        // so gridCore also calls init()\n        _this.initialised = false;\n        return _this;\n    }\n    ToolPanelComp.prototype.postConstruct = function () {\n        this.init();\n    };\n    ToolPanelComp.prototype.init = function () {\n        if (this.initialised) {\n            return;\n        }\n        this.initialised = true;\n        this.columnPanel = new columnPanel_1.ColumnPanel();\n        this.buttonComp = new PanelSelectComp(this.columnPanel);\n        this.context.wireBean(this.columnPanel);\n        this.context.wireBean(this.buttonComp);\n        this.appendChild(this.buttonComp);\n        this.appendChild(this.columnPanel);\n    };\n    ToolPanelComp.prototype.refresh = function () {\n        this.columnPanel.refresh();\n    };\n    ToolPanelComp.prototype.showToolPanel = function (show) {\n        this.columnPanel.setVisible(show);\n        var event = {\n            type: main_1.Events.EVENT_TOOL_PANEL_VISIBLE_CHANGED,\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi()\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ToolPanelComp.prototype.isToolPanelShowing = function () {\n        return this.columnPanel.isVisible();\n    };\n    __decorate([\n        main_1.Autowired(\"context\"),\n        __metadata(\"design:type\", main_1.Context)\n    ], ToolPanelComp.prototype, \"context\", void 0);\n    __decorate([\n        main_1.Autowired(\"eventService\"),\n        __metadata(\"design:type\", main_1.EventService)\n    ], ToolPanelComp.prototype, \"eventService\", void 0);\n    __decorate([\n        main_1.Autowired(\"gridOptionsWrapper\"),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], ToolPanelComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ToolPanelComp.prototype, \"postConstruct\", null);\n    ToolPanelComp = __decorate([\n        main_1.Bean(\"toolPanelComp\")\n    ], ToolPanelComp);\n    return ToolPanelComp;\n}(main_1.Component));\nexports.ToolPanelComp = ToolPanelComp;\nvar PanelSelectComp = /*@__PURE__*/ (function (_super) {\n    __extends(PanelSelectComp, _super);\n    function PanelSelectComp(columnPanel) {\n        var _this = _super.call(this) || this;\n        _this.columnPanel = columnPanel;\n        return _this;\n    }\n    PanelSelectComp.prototype.createTemplate = function () {\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        return \"<div class=\\\"ag-side-buttons\\\">\\n                    <button type=\\\"button\\\" ref=\\\"toggle-button\\\">\" + translate('columns', 'Columns') + \"</button>\\n                </div>\";\n    };\n    PanelSelectComp.prototype.postConstruct = function () {\n        var _this = this;\n        this.setTemplate(this.createTemplate());\n        var btShow = this.getRefElement(\"toggle-button\");\n        this.addDestroyableEventListener(btShow, 'click', function () {\n            _this.columnPanel.setVisible(!_this.columnPanel.isVisible());\n            // this gets grid to resize immediately, rather than waiting\n            // for next 500ms\n            _this.gridCore.doLayout();\n        });\n        var showButtons = !this.gridOptionsWrapper.isToolPanelSuppressSideButtons();\n        this.setVisible(showButtons);\n    };\n    __decorate([\n        main_1.Autowired(\"gridOptionsWrapper\"),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], PanelSelectComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.Autowired(\"gridCore\"),\n        __metadata(\"design:type\", main_1.GridCore)\n    ], PanelSelectComp.prototype, \"gridCore\", void 0);\n    __decorate([\n        main_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], PanelSelectComp.prototype, \"postConstruct\", null);\n    return PanelSelectComp;\n}(main_1.Component));\n",null]}