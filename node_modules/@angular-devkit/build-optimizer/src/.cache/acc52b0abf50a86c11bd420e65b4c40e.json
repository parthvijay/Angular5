{"remainingRequest":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/ag-grid-enterprise/dist/lib/setFilter/setFilterListItem.js","dependencies":[{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/ag-grid-enterprise/dist/lib/setFilter/setFilterListItem.js","mtime":1523957359000},{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/cache-loader/dist/cjs.js","mtime":1525383502481},{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["// ag-grid-enterprise v17.1.1\n\"use strict\";\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar main_1 = require(\"ag-grid/main\");\nvar SetFilterListItem = /*@__PURE__*/ (function (_super) {\n    __extends(SetFilterListItem, _super);\n    function SetFilterListItem(value, column) {\n        var _this = _super.call(this, SetFilterListItem.TEMPLATE) || this;\n        _this.selected = true;\n        _this.value = value;\n        _this.column = column;\n        return _this;\n    }\n    SetFilterListItem.prototype.init = function () {\n        var _this = this;\n        this.eCheckedIcon = main_1._.createIconNoSpan('checkboxChecked', this.gridOptionsWrapper, this.column);\n        this.eUncheckedIcon = main_1._.createIconNoSpan('checkboxUnchecked', this.gridOptionsWrapper, this.column);\n        this.eCheckbox = this.queryForHtmlElement(\".ag-filter-checkbox\");\n        this.eClickableArea = this.getGui();\n        this.updateCheckboxIcon();\n        this.render();\n        var listener = function (mouseEvent) {\n            main_1._.addAgGridEventPath(mouseEvent);\n            _this.selected = !_this.selected;\n            _this.updateCheckboxIcon();\n            var event = {\n                type: SetFilterListItem.EVENT_SELECTED\n            };\n            return _this.dispatchEvent(event);\n        };\n        this.addDestroyableEventListener(this.eClickableArea, 'click', listener);\n    };\n    SetFilterListItem.prototype.isSelected = function () {\n        return this.selected;\n    };\n    SetFilterListItem.prototype.setSelected = function (selected) {\n        this.selected = selected;\n        this.updateCheckboxIcon();\n    };\n    SetFilterListItem.prototype.updateCheckboxIcon = function () {\n        if (this.eCheckbox.children) {\n            for (var i = 0; i < this.eCheckbox.children.length; i++) {\n                this.eCheckbox.removeChild(this.eCheckbox.children.item(i));\n            }\n        }\n        if (this.isSelected()) {\n            this.eCheckbox.appendChild(this.eCheckedIcon);\n        }\n        else {\n            this.eCheckbox.appendChild(this.eUncheckedIcon);\n        }\n    };\n    SetFilterListItem.prototype.render = function () {\n        var _this = this;\n        var valueElement = this.queryForHtmlElement(\".ag-filter-value\");\n        var valueFormatted = this.valueFormatterService.formatValue(this.column, null, null, this.value);\n        var colDef = this.column.getColDef();\n        var valueObj = { value: this.value, valueFormatted: valueFormatted };\n        var componentPromise = this.cellRendererService.useFilterCellRenderer(colDef, valueElement, valueObj);\n        if (!componentPromise)\n            return;\n        componentPromise.then(function (component) {\n            if (component && component.destroy) {\n                _this.addDestroyFunc(component.destroy.bind(component));\n            }\n        });\n    };\n    SetFilterListItem.EVENT_SELECTED = 'selected';\n    SetFilterListItem.TEMPLATE = '<label class=\"ag-set-filter-item\">' +\n        '<div class=\"ag-filter-checkbox\"></div>' +\n        '<span class=\"ag-filter-value\"></span>' +\n        '</label>';\n    __decorate([\n        main_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], SetFilterListItem.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.Autowired('cellRendererService'),\n        __metadata(\"design:type\", main_1.CellRendererService)\n    ], SetFilterListItem.prototype, \"cellRendererService\", void 0);\n    __decorate([\n        main_1.Autowired('valueFormatterService'),\n        __metadata(\"design:type\", main_1.ValueFormatterService)\n    ], SetFilterListItem.prototype, \"valueFormatterService\", void 0);\n    __decorate([\n        main_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], SetFilterListItem.prototype, \"init\", null);\n    return SetFilterListItem;\n}(main_1.Component));\nexports.SetFilterListItem = SetFilterListItem;\n",null]}