{"remainingRequest":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/ag-grid-enterprise/dist/lib/toolPanel/columnPanel.js","dependencies":[{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/ag-grid-enterprise/dist/lib/toolPanel/columnPanel.js","mtime":1523957359000},{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/cache-loader/dist/cjs.js","mtime":1525383502481},{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["// ag-grid-enterprise v17.1.1\n\"use strict\";\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar main_1 = require(\"ag-grid/main\");\nvar pivotModePanel_1 = require(\"./columnDrop/pivotModePanel\");\nvar valueColumnsPanel_1 = require(\"./columnDrop/valueColumnsPanel\");\nvar rowGroupColumnsPanel_1 = require(\"./columnDrop/rowGroupColumnsPanel\");\nvar columnSelectComp_1 = require(\"./columnsSelect/columnSelectComp\");\nvar pivotColumnsPanel_1 = require(\"./columnDrop/pivotColumnsPanel\");\nvar ag_grid_1 = require(\"ag-grid\");\nvar ColumnPanel = /*@__PURE__*/ (function (_super) {\n    __extends(ColumnPanel, _super);\n    function ColumnPanel() {\n        var _this = _super.call(this, ColumnPanel.TEMPLATE) || this;\n        _this.initialised = false;\n        _this.childDestroyFuncs = [];\n        _this.componentToResize = _this;\n        return _this;\n    }\n    // lazy initialise the panel\n    ColumnPanel.prototype.setVisible = function (visible) {\n        _super.prototype.setVisible.call(this, visible);\n        if (visible && !this.initialised) {\n            this.init();\n        }\n    };\n    ColumnPanel.prototype.init = function () {\n        this.instantiate(this.context);\n        if (!this.gridOptionsWrapper.isToolPanelSuppressPivotMode()) {\n            this.addComponent(new pivotModePanel_1.PivotModePanel());\n        }\n        this.addComponent(new columnSelectComp_1.ColumnSelectComp(true));\n        if (!this.gridOptionsWrapper.isToolPanelSuppressRowGroups()) {\n            this.addComponent(new rowGroupColumnsPanel_1.RowGroupColumnsPanel(false));\n        }\n        if (!this.gridOptionsWrapper.isToolPanelSuppressValues()) {\n            this.addComponent(new valueColumnsPanel_1.ValuesColumnPanel(false));\n        }\n        if (!this.gridOptionsWrapper.isToolPanelSuppressPivots()) {\n            this.addComponent(new pivotColumnsPanel_1.PivotColumnsPanel(false));\n        }\n        this.initialised = true;\n    };\n    ColumnPanel.prototype.addComponent = function (component) {\n        this.context.wireBean(component);\n        this.eCenterPanel.appendChild(component.getGui());\n        this.childDestroyFuncs.push(component.destroy.bind(component));\n    };\n    ColumnPanel.prototype.destroyChildren = function () {\n        this.childDestroyFuncs.forEach(function (func) { return func(); });\n        this.childDestroyFuncs.length = 0;\n        main_1._.removeAllChildren(this.eCenterPanel);\n    };\n    ColumnPanel.prototype.refresh = function () {\n        this.destroyChildren();\n        this.init();\n    };\n    ColumnPanel.prototype.destroy = function () {\n        this.destroyChildren();\n        _super.prototype.destroy.call(this);\n    };\n    ColumnPanel.TEMPLATE = \"<div class=\\\"ag-column-panel\\\">\\n            <ag-horizontal-resize class=\\\"ag-tool-panel-horizontal-resize\\\" [component-to-resize]=\\\"componentToResize\\\"></ag-horizontal-resize>\\n            <div class=\\\"ag-column-panel-center\\\" ref=\\\"eColumnPanelCenter\\\"></div>\\n        </div>\";\n    __decorate([\n        main_1.Autowired(\"context\"),\n        __metadata(\"design:type\", main_1.Context)\n    ], ColumnPanel.prototype, \"context\", void 0);\n    __decorate([\n        main_1.Autowired(\"gridOptionsWrapper\"),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], ColumnPanel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.Autowired(\"gridApi\"),\n        __metadata(\"design:type\", main_1.GridApi)\n    ], ColumnPanel.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_1.RefSelector('eColumnPanelCenter'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ColumnPanel.prototype, \"eCenterPanel\", void 0);\n    return ColumnPanel;\n}(main_1.Component));\nexports.ColumnPanel = ColumnPanel;\n",null]}