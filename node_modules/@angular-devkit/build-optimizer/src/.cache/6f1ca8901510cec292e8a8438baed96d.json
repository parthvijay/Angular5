{"remainingRequest":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/ag-grid-enterprise/dist/lib/menu/menuList.js","dependencies":[{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/ag-grid-enterprise/dist/lib/menu/menuList.js","mtime":1523957359000},{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/cache-loader/dist/cjs.js","mtime":1525383502481},{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["// ag-grid-enterprise v17.1.1\n\"use strict\";\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_1 = require(\"ag-grid\");\nvar menuItemComponent_1 = require(\"./menuItemComponent\");\nvar MenuList = /*@__PURE__*/ (function (_super) {\n    __extends(MenuList, _super);\n    function MenuList() {\n        var _this = _super.call(this, MenuList.TEMPLATE) || this;\n        _this.timerCount = 0;\n        _this.removeChildFuncs = [];\n        return _this;\n        // console.log('MenuList->constructor() ' + this.instance);\n    }\n    MenuList.prototype.clearActiveItem = function () {\n        this.removeActiveItem();\n        this.removeChildPopup();\n    };\n    MenuList.prototype.addMenuItems = function (menuItems) {\n        var _this = this;\n        if (ag_grid_1.Utils.missing(menuItems)) {\n            return;\n        }\n        menuItems.forEach(function (menuItemOrString) {\n            if (menuItemOrString === 'separator') {\n                _this.addSeparator();\n            }\n            else if (typeof menuItemOrString === 'string') {\n                console.log(\"ag-Grid: unrecognised menu item \" + menuItemOrString);\n            }\n            else {\n                var menuItem = menuItemOrString;\n                _this.addItem(menuItem);\n            }\n        });\n    };\n    MenuList.prototype.addItem = function (menuItemDef) {\n        var _this = this;\n        var cMenuItem = new menuItemComponent_1.MenuItemComponent(menuItemDef);\n        this.context.wireBean(cMenuItem);\n        this.getGui().appendChild(cMenuItem.getGui());\n        this.addDestroyFunc(function () { return cMenuItem.destroy(); });\n        cMenuItem.addEventListener(menuItemComponent_1.MenuItemComponent.EVENT_ITEM_SELECTED, function (event) {\n            if (menuItemDef.subMenu) {\n                _this.showChildMenu(menuItemDef, cMenuItem, event.mouseEvent);\n            }\n            else {\n                _this.dispatchEvent(event);\n            }\n        });\n        cMenuItem.addGuiEventListener('mouseenter', this.mouseEnterItem.bind(this, menuItemDef, cMenuItem));\n        cMenuItem.addGuiEventListener('mouseleave', function () { return _this.timerCount++; });\n    };\n    MenuList.prototype.mouseEnterItem = function (menuItemParams, menuItem) {\n        if (menuItemParams.disabled) {\n            return;\n        }\n        if (this.activeMenuItemParams !== menuItemParams) {\n            this.removeChildPopup();\n        }\n        this.removeActiveItem();\n        this.activeMenuItemParams = menuItemParams;\n        this.activeMenuItem = menuItem;\n        ag_grid_1.Utils.addCssClass(this.activeMenuItem.getGui(), 'ag-menu-option-active');\n        if (menuItemParams.subMenu) {\n            this.addHoverForChildPopup(menuItemParams, menuItem);\n        }\n    };\n    MenuList.prototype.removeActiveItem = function () {\n        if (this.activeMenuItem) {\n            ag_grid_1.Utils.removeCssClass(this.activeMenuItem.getGui(), 'ag-menu-option-active');\n            this.activeMenuItem = null;\n            this.activeMenuItemParams = null;\n        }\n    };\n    MenuList.prototype.addHoverForChildPopup = function (menuItemDef, menuItemComp) {\n        var _this = this;\n        var timerCountCopy = this.timerCount;\n        setTimeout(function () {\n            var shouldShow = timerCountCopy === _this.timerCount;\n            var showingThisMenu = _this.subMenuParentDef === menuItemDef;\n            if (shouldShow && !showingThisMenu) {\n                _this.showChildMenu(menuItemDef, menuItemComp, null);\n            }\n        }, 500);\n    };\n    MenuList.prototype.addSeparator = function () {\n        this.getGui().appendChild(ag_grid_1.Utils.loadTemplate(MenuList.SEPARATOR_TEMPLATE));\n    };\n    MenuList.prototype.showChildMenu = function (menuItemDef, menuItemComp, mouseEvent) {\n        var _this = this;\n        this.removeChildPopup();\n        var childMenu = new MenuList();\n        this.context.wireBean(childMenu);\n        childMenu.addMenuItems(menuItemDef.subMenu);\n        var ePopup = ag_grid_1.Utils.loadTemplate('<div class=\"ag-menu\"></div>');\n        ePopup.appendChild(childMenu.getGui());\n        var hidePopupFunc = this.popupService.addAsModalPopup(ePopup, true, null, mouseEvent);\n        this.popupService.positionPopupForMenu({\n            eventSource: menuItemComp.getGui(),\n            ePopup: ePopup\n        });\n        this.subMenuParentDef = menuItemDef;\n        var selectedListener = function (event) {\n            _this.dispatchEvent(event);\n        };\n        childMenu.addEventListener(menuItemComponent_1.MenuItemComponent.EVENT_ITEM_SELECTED, selectedListener);\n        this.removeChildFuncs.push(function () {\n            childMenu.clearActiveItem();\n            childMenu.destroy();\n            _this.subMenuParentDef = null;\n            childMenu.removeEventListener(menuItemComponent_1.MenuItemComponent.EVENT_ITEM_SELECTED, selectedListener);\n            hidePopupFunc();\n        });\n    };\n    MenuList.prototype.removeChildPopup = function () {\n        this.removeChildFuncs.forEach(function (func) { return func(); });\n        this.removeChildFuncs = [];\n    };\n    MenuList.prototype.destroy = function () {\n        // console.log('MenuList->destroy() ' + this.instance);\n        this.removeChildPopup();\n        _super.prototype.destroy.call(this);\n    };\n    // private instance = Math.random();\n    MenuList.TEMPLATE = '<div class=\"ag-menu-list\"></div>';\n    MenuList.SEPARATOR_TEMPLATE = '<div class=\"ag-menu-separator\">' +\n        '  <span class=\"ag-menu-separator-cell\"></span>' +\n        '  <span class=\"ag-menu-separator-cell\"></span>' +\n        '  <span class=\"ag-menu-separator-cell\"></span>' +\n        '  <span class=\"ag-menu-separator-cell\"></span>' +\n        '</div>';\n    __decorate([\n        ag_grid_1.Autowired('context'),\n        __metadata(\"design:type\", ag_grid_1.Context)\n    ], MenuList.prototype, \"context\", void 0);\n    __decorate([\n        ag_grid_1.Autowired('popupService'),\n        __metadata(\"design:type\", ag_grid_1.PopupService)\n    ], MenuList.prototype, \"popupService\", void 0);\n    return MenuList;\n}(ag_grid_1.Component));\nexports.MenuList = MenuList;\n",null]}