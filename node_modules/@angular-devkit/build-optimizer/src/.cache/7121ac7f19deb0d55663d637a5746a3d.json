{"remainingRequest":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/ag-grid-enterprise/dist/lib/menu/contextMenu.js","dependencies":[{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/ag-grid-enterprise/dist/lib/menu/contextMenu.js","mtime":1523957359000},{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/cache-loader/dist/cjs.js","mtime":1525383502481},{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["// ag-grid-enterprise v17.1.1\n\"use strict\";\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_1 = require(\"ag-grid\");\nvar clipboardService_1 = require(\"../clipboardService\");\nvar menuItemComponent_1 = require(\"./menuItemComponent\");\nvar menuList_1 = require(\"./menuList\");\nvar menuItemMapper_1 = require(\"./menuItemMapper\");\nvar ContextMenuFactory = /*@__PURE__*/ (function () {\n    function ContextMenuFactory() {\n    }\n    ContextMenuFactory.prototype.init = function () {\n    };\n    ContextMenuFactory.prototype.hideActiveMenu = function () {\n        if (this.activeMenu) {\n            this.activeMenu.destroy();\n        }\n    };\n    ContextMenuFactory.prototype.getMenuItems = function (node, column, value) {\n        var defaultMenuOptions;\n        if (ag_grid_1.Utils.exists(node)) {\n            defaultMenuOptions = [];\n            if (column) {\n                // only makes sense if column exists, could have originated from a row\n                defaultMenuOptions = ['copy', 'copyWithHeaders', 'paste', 'separator'];\n            }\n            defaultMenuOptions.push('toolPanel');\n            // if user clicks a cell\n            var suppressExcel = this.gridOptionsWrapper.isSuppressExcelExport();\n            var suppressCsv = this.gridOptionsWrapper.isSuppressCsvExport();\n            var onIPad = ag_grid_1._.isUserAgentIPad();\n            var anyExport = !onIPad && (!suppressExcel || !suppressCsv);\n            if (anyExport) {\n                defaultMenuOptions.push('export');\n            }\n        }\n        else {\n            // if user clicks outside of a cell (eg below the rows, or not rows present)\n            defaultMenuOptions = ['toolPanel'];\n        }\n        if (this.gridOptionsWrapper.getContextMenuItemsFunc()) {\n            var userFunc = this.gridOptionsWrapper.getContextMenuItemsFunc();\n            var params = {\n                node: node,\n                column: column,\n                value: value,\n                defaultItems: defaultMenuOptions,\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                context: this.gridOptionsWrapper.getContext()\n            };\n            var menuItemsFromUser = userFunc(params);\n            return menuItemsFromUser;\n        }\n        else {\n            return defaultMenuOptions;\n        }\n    };\n    ContextMenuFactory.prototype.showMenu = function (node, column, value, mouseEvent) {\n        var _this = this;\n        var menuItems = this.getMenuItems(node, column, value);\n        if (ag_grid_1.Utils.missingOrEmpty(menuItems)) {\n            return;\n        }\n        var menu = new ContextMenu(menuItems);\n        this.context.wireBean(menu);\n        var eMenuGui = menu.getGui();\n        // need to show filter before positioning, as only after filter\n        // is visible can we find out what the width of it is\n        var hidePopup = this.popupService.addAsModalPopup(eMenuGui, true, function () { return menu.destroy(); }, mouseEvent);\n        this.popupService.positionPopupUnderMouseEvent({\n            column: column,\n            rowNode: node,\n            type: 'contextMenu',\n            mouseEvent: mouseEvent,\n            ePopup: eMenuGui\n        });\n        menu.afterGuiAttached({\n            hidePopup: hidePopup\n        });\n        this.activeMenu = menu;\n        menu.addEventListener(ag_grid_1.BeanStub.EVENT_DESTROYED, function () {\n            if (_this.activeMenu === menu) {\n                _this.activeMenu = null;\n            }\n        });\n    };\n    __decorate([\n        ag_grid_1.Autowired('context'),\n        __metadata(\"design:type\", ag_grid_1.Context)\n    ], ContextMenuFactory.prototype, \"context\", void 0);\n    __decorate([\n        ag_grid_1.Autowired('popupService'),\n        __metadata(\"design:type\", ag_grid_1.PopupService)\n    ], ContextMenuFactory.prototype, \"popupService\", void 0);\n    __decorate([\n        ag_grid_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_1.GridOptionsWrapper)\n    ], ContextMenuFactory.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], ContextMenuFactory.prototype, \"rowModel\", void 0);\n    __decorate([\n        ag_grid_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ContextMenuFactory.prototype, \"init\", null);\n    ContextMenuFactory = __decorate([\n        ag_grid_1.Bean('contextMenuFactory')\n    ], ContextMenuFactory);\n    return ContextMenuFactory;\n}());\nexports.ContextMenuFactory = ContextMenuFactory;\nvar ContextMenu = /*@__PURE__*/ (function (_super) {\n    __extends(ContextMenu, _super);\n    function ContextMenu(menuItems) {\n        var _this = _super.call(this, '<div class=\"ag-menu\"></div>') || this;\n        _this.menuItems = menuItems;\n        return _this;\n    }\n    ContextMenu.prototype.addMenuItems = function () {\n        var menuList = new menuList_1.MenuList();\n        this.context.wireBean(menuList);\n        var menuItemsMapped = this.menuItemMapper.mapWithStockItems(this.menuItems, null);\n        menuList.addMenuItems(menuItemsMapped);\n        this.appendChild(menuList);\n        menuList.addEventListener(menuItemComponent_1.MenuItemComponent.EVENT_ITEM_SELECTED, this.destroy.bind(this));\n    };\n    ContextMenu.prototype.afterGuiAttached = function (params) {\n        this.addDestroyFunc(params.hidePopup);\n        // if the body scrolls, we want to hide the menu, as the menu will not appear in the right location anymore\n        this.addDestroyableEventListener(this.eventService, 'bodyScroll', this.destroy.bind(this));\n    };\n    __decorate([\n        ag_grid_1.Autowired('context'),\n        __metadata(\"design:type\", ag_grid_1.Context)\n    ], ContextMenu.prototype, \"context\", void 0);\n    __decorate([\n        ag_grid_1.Autowired('clipboardService'),\n        __metadata(\"design:type\", clipboardService_1.ClipboardService)\n    ], ContextMenu.prototype, \"clipboardService\", void 0);\n    __decorate([\n        ag_grid_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_1.GridOptionsWrapper)\n    ], ContextMenu.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_1.GridApi)\n    ], ContextMenu.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_1.EventService)\n    ], ContextMenu.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_1.Autowired('menuItemMapper'),\n        __metadata(\"design:type\", menuItemMapper_1.MenuItemMapper)\n    ], ContextMenu.prototype, \"menuItemMapper\", void 0);\n    __decorate([\n        ag_grid_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ContextMenu.prototype, \"addMenuItems\", null);\n    return ContextMenu;\n}(ag_grid_1.Component));\n",null]}