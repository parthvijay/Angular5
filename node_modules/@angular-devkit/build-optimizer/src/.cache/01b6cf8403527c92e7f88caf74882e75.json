{"remainingRequest":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/ag-grid-enterprise/dist/lib/excelXmlFactory.js","dependencies":[{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/ag-grid-enterprise/dist/lib/excelXmlFactory.js","mtime":1523957359000},{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/cache-loader/dist/cjs.js","mtime":1525383502481},{"path":"/Users/pavijayv/Documents/cisco-ready-qualification/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["// ag-grid-enterprise v17.1.1\n\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar main_1 = require(\"ag-grid/main\");\nvar main_2 = require(\"ag-grid/main\");\nvar main_3 = require(\"ag-grid/main\");\nvar LINE_SEPARATOR = '\\r\\n';\n/**\n * See https://msdn.microsoft.com/en-us/library/aa140066(v=office.10).aspx\n */\nvar ExcelXmlFactory = /*@__PURE__*/ (function () {\n    function ExcelXmlFactory() {\n    }\n    ExcelXmlFactory.prototype.createExcelXml = function (styles, worksheets) {\n        var documentProperties = this.documentProperties();\n        var excelWorkbook = this.excelWorkbook();\n        return this.excelXmlHeader() +\n            this.xmlFactory.createXml(this.workbook(documentProperties, excelWorkbook, styles, worksheets), function (boolean) { return boolean ? \"1\" : \"0\"; });\n    };\n    ExcelXmlFactory.prototype.workbook = function (documentProperties, excelWorkbook, styles, worksheets) {\n        var _this = this;\n        var children = [\n            documentProperties,\n            excelWorkbook,\n            this.stylesXmlElement(styles)\n        ];\n        main_3.Utils.map(worksheets, function (it) {\n            return _this.worksheetXmlElement(it);\n        }).forEach(function (it) {\n            children.push(it);\n        });\n        return {\n            name: \"Workbook\",\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"xmlns:\",\n                        map: {\n                            o: \"urn:schemas-microsoft-com:office:office\",\n                            x: \"urn:schemas-microsoft-com:office:excel\",\n                            ss: \"urn:schemas-microsoft-com:office:spreadsheet\",\n                            html: \"http://www.w3.org/TR/REC-html40\"\n                        },\n                    }],\n                rawMap: {\n                    xmlns: \"urn:schemas-microsoft-com:office:spreadsheet\"\n                }\n            },\n            children: children\n        };\n    };\n    ExcelXmlFactory.prototype.excelXmlHeader = function () {\n        // need to take out the question mark, otherwise it bothers php when have < and ? beside each\n        // other in a string, as php thinks it's a directive for php\n        var QUESTION_MARK = '?';\n        return '<' + QUESTION_MARK + 'xml version=\"1.0\"' + QUESTION_MARK + '>' + LINE_SEPARATOR +\n            '<' + QUESTION_MARK + 'mso-application progid=\"Excel.Sheet\"' + QUESTION_MARK + '>' + LINE_SEPARATOR;\n    };\n    ExcelXmlFactory.prototype.stylesXmlElement = function (styles) {\n        var _this = this;\n        return {\n            name: 'Styles',\n            children: styles ? main_3.Utils.map(styles, function (it) {\n                return _this.styleXmlElement(it);\n            }) : []\n        };\n    };\n    ExcelXmlFactory.prototype.styleXmlElement = function (style) {\n        var borders = [];\n        if (style.borders) {\n            [\n                style.borders.borderBottom,\n                style.borders.borderLeft,\n                style.borders.borderRight,\n                style.borders.borderTop\n            ].forEach(function (it, index) {\n                var current = index == 0 ? \"Bottom\" : index == 1 ? \"Left\" : index == 2 ? \"Right\" : \"Top\";\n                borders.push({\n                    name: \"Border\",\n                    properties: {\n                        prefixedAttributes: [{\n                                prefix: \"ss:\",\n                                map: {\n                                    Position: current,\n                                    LineStyle: it.lineStyle,\n                                    Weight: it.weight,\n                                    Color: it.color\n                                }\n                            }]\n                    }\n                });\n            });\n        }\n        var children = [];\n        if (style.alignment) {\n            children.push({\n                name: \"Alignment\",\n                properties: {\n                    prefixedAttributes: [{\n                            prefix: \"ss:\",\n                            map: {\n                                Vertical: style.alignment.vertical,\n                                Horizontal: style.alignment.horizontal,\n                                Indent: style.alignment.indent,\n                                ReadingOrder: style.alignment.readingOrder,\n                                Rotate: style.alignment.rotate,\n                                ShrinkToFit: style.alignment.shrinkToFit,\n                                VerticalText: style.alignment.verticalText,\n                                WrapText: style.alignment.wrapText\n                            }\n                        }]\n                }\n            });\n        }\n        if (style.borders) {\n            children.push({\n                name: \"Borders\",\n                children: borders\n            });\n        }\n        if (style.font) {\n            children.push({\n                name: \"Font\",\n                properties: {\n                    prefixedAttributes: [{\n                            prefix: \"ss:\",\n                            map: {\n                                Bold: style.font.bold,\n                                FontName: style.font.fontName,\n                                Italic: style.font.italic,\n                                Color: style.font.color,\n                                Outline: style.font.outline,\n                                Shadow: style.font.shadow,\n                                Size: style.font.size,\n                                StrikeThrough: style.font.strikeThrough,\n                                Underline: style.font.underline,\n                                VerticalAlign: style.font.verticalAlign\n                            }\n                        }, {\n                            prefix: \"x:\",\n                            map: {\n                                CharSet: style.font.charSet,\n                                Family: style.font.family\n                            }\n                        }]\n                }\n            });\n        }\n        if (style.interior) {\n            children.push({\n                name: \"Interior\",\n                properties: {\n                    prefixedAttributes: [{\n                            prefix: \"ss:\",\n                            map: {\n                                Color: style.interior.color,\n                                Pattern: style.interior.pattern,\n                                PatternColor: style.interior.patternColor\n                            }\n                        }]\n                }\n            });\n        }\n        if (style.protection) {\n            children.push({\n                name: \"Protection\",\n                properties: {\n                    prefixedAttributes: [{\n                            prefix: \"ss:\",\n                            map: {\n                                Protected: style.protection.protected,\n                                HideFormula: style.protection.hideFormula\n                            }\n                        }]\n                }\n            });\n        }\n        if (style.numberFormat) {\n            children.push({\n                name: \"NumberFormat\",\n                properties: {\n                    prefixedAttributes: [{\n                            prefix: \"ss:\",\n                            map: {\n                                Format: style.numberFormat.format\n                            }\n                        }]\n                }\n            });\n        }\n        return {\n            name: \"Style\",\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"ss:\",\n                        map: {\n                            ID: style.id,\n                            Name: (style.name) ? style.name : style.id\n                        }\n                    }]\n            },\n            children: children\n        };\n    };\n    ExcelXmlFactory.prototype.worksheetXmlElement = function (worksheet) {\n        var _this = this;\n        var children = [];\n        main_3.Utils.map(worksheet.table.columns, function (it) {\n            return _this.columnXmlElement(it);\n        }).forEach(function (it) {\n            children.push(it);\n        });\n        main_3.Utils.map(worksheet.table.rows, function (it) {\n            return _this.rowXmlElement(it);\n        }).forEach(function (it) {\n            children.push(it);\n        });\n        return {\n            name: \"Worksheet\",\n            children: [{\n                    name: \"Table\",\n                    children: children\n                }],\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"ss:\",\n                        map: {\n                            Name: worksheet.name\n                        }\n                    }]\n            }\n        };\n    };\n    ExcelXmlFactory.prototype.columnXmlElement = function (column) {\n        return {\n            name: \"Column\",\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"ss:\",\n                        map: {\n                            Width: column.width\n                        }\n                    }]\n            }\n        };\n    };\n    ExcelXmlFactory.prototype.rowXmlElement = function (row) {\n        var _this = this;\n        return {\n            name: \"Row\",\n            children: main_3.Utils.map(row.cells, function (it) {\n                return _this.rowCellXmlElement(it);\n            })\n        };\n    };\n    ExcelXmlFactory.prototype.rowCellXmlElement = function (cell) {\n        var properties = {};\n        if (cell.mergeAcross) {\n            properties['MergeAcross'] = cell.mergeAcross;\n        }\n        if (cell.styleId) {\n            properties['StyleID'] = cell.styleId;\n        }\n        return {\n            name: \"Cell\",\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"ss:\",\n                        map: properties\n                    }]\n            },\n            children: [{\n                    name: \"Data\",\n                    properties: {\n                        prefixedAttributes: [{\n                                prefix: \"ss:\",\n                                map: {\n                                    Type: cell.data.type\n                                }\n                            }]\n                    },\n                    textNode: cell.data.value\n                }]\n        };\n    };\n    ExcelXmlFactory.prototype.excelWorkbook = function () {\n        return {\n            name: \"ExcelWorkbook\",\n            properties: {\n                rawMap: {\n                    xmlns: \"urn:schemas-microsoft-com:office:excel\"\n                }\n            },\n            children: [{\n                    name: \"WindowHeight\",\n                    textNode: \"8130\"\n                }, {\n                    name: \"WindowWidth\",\n                    textNode: \"15135\"\n                }, {\n                    name: \"WindowHeight\",\n                    textNode: \"8130\"\n                }, {\n                    name: \"WindowTopX\",\n                    textNode: \"120\"\n                }, {\n                    name: \"WindowTopY\",\n                    textNode: \"45\"\n                }, {\n                    name: \"ProtectStructure\",\n                    textNode: \"False\"\n                }, {\n                    name: \"ProtectWindow\",\n                    textNode: \"False\"\n                }]\n        };\n    };\n    ExcelXmlFactory.prototype.documentProperties = function () {\n        return {\n            name: \"DocumentProperties\",\n            properties: {\n                rawMap: {\n                    xmlns: \"urn:schemas-microsoft-com:office:office\"\n                }\n            },\n            children: [{\n                    name: \"Version\",\n                    textNode: \"12.00\"\n                }]\n        };\n    };\n    __decorate([\n        main_2.Autowired('xmlFactory'),\n        __metadata(\"design:type\", main_1.XmlFactory)\n    ], ExcelXmlFactory.prototype, \"xmlFactory\", void 0);\n    ExcelXmlFactory = __decorate([\n        main_2.Bean('excelXmlFactory')\n    ], ExcelXmlFactory);\n    return ExcelXmlFactory;\n}());\nexports.ExcelXmlFactory = ExcelXmlFactory;\n",null]}